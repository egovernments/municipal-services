/*
 * eChallan System
 * ### API Specs For eChallan System ### 1. Generate the new challan. 2. Update the details of existing challan 3. Search the existing challan 4. Generate the demand and bill for the challan amount so that collection can be done in online and offline mode. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@egovernments.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.egov.echallancalculation.model;

import java.util.Objects;

import org.egov.common.contract.request.Role;
import org.egov.echallancalculation.web.models.user.User;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

/**
 * This is acting ID token of the authenticated user on the server. Any value provided by the clients will be ignored and actual user based on authtoken will be used on the server.
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-10T16:46:24.044+05:30[Asia/Calcutta]")
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
public class UserInfo extends User {

  @JsonProperty("tenantId")

  private String tenantId = null;

  @JsonProperty("uuid")

  private String uuid = null;

  @JsonProperty("userName")

  private String userName = null;

  @JsonProperty("password")

  private String password = null;

  @JsonProperty("idToken")

  private String idToken = null;

  @JsonProperty("mobileNumber")

  private String mobileNumber = null;

  @JsonProperty("email")

  private String email = null;

  @JsonProperty("primaryrole")

  private List<Role> primaryrole = new ArrayList<Role>();

  @JsonProperty("additionalroles")

  private List<TenantRole> additionalroles = null;
  public UserInfo tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  

  /**
  * Unique Identifier of the tenant to which user primarily belongs
  * @return tenantId
  **/
  public String getTenantId() {
    return tenantId;
  }
  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }
  public UserInfo uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

  

  /**
  * System Generated User id of the authenticated user.
  * @return uuid
  **/
  public String getUuid() {
    return uuid;
  }
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }
  public UserInfo userName(String userName) {
    this.userName = userName;
    return this;
  }

  

  /**
  * Unique user name of the authenticated user
  * @return userName
  **/
  public String getUserName() {
    return userName;
  }
  public void setUserName(String userName) {
    this.userName = userName;
  }
  public UserInfo password(String password) {
    this.password = password;
    return this;
  }

  

  /**
  * password of the user.
  * @return password
  **/
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }
  public UserInfo idToken(String idToken) {
    this.idToken = idToken;
    return this;
  }

  

  /**
  * This will be the OTP.
  * @return idToken
  **/
  public String getIdToken() {
    return idToken;
  }
  public void setIdToken(String idToken) {
    this.idToken = idToken;
  }
  public UserInfo mobileNumber(String mobileNumber) {
    this.mobileNumber = mobileNumber;
    return this;
  }

  

  /**
  * mobile number of the autheticated user
  * @return mobile
  **/
  public String getMobileNumber() {
    return mobileNumber;
  }
  public void setMobileNumber(String mobileNumber) {
    this.mobileNumber = mobileNumber;
  }
  public UserInfo email(String email) {
    this.email = email;
    return this;
  }

  

  /**
  * email address of the authenticated user
  * @return email
  **/
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }
  public UserInfo primaryrole(List<Role> primaryrole) {
    this.primaryrole = primaryrole;
    return this;
  }

  public UserInfo addPrimaryroleItem(Role primaryroleItem) {
    this.primaryrole.add(primaryroleItem);
    return this;
  }

  /**
  * List of all the roles for the primary tenant
  * @return primaryrole
  **/
  public List<Role> getPrimaryrole() {
    return primaryrole;
  }
  public void setPrimaryrole(List<Role> primaryrole) {
    this.primaryrole = primaryrole;
  }
  public UserInfo additionalroles(List<TenantRole> additionalroles) {
    this.additionalroles = additionalroles;
    return this;
  }

  public UserInfo addAdditionalrolesItem(TenantRole additionalrolesItem) {
    if (this.additionalroles == null) {
      this.additionalroles = new ArrayList<TenantRole>();
    }
    this.additionalroles.add(additionalrolesItem);
    return this;
  }

  /**
  * array of additional tenantids authorized for the authenticated user
  * @return additionalroles
  **/
  public List<TenantRole> getAdditionalroles() {
    return additionalroles;
  }
  public void setAdditionalroles(List<TenantRole> additionalroles) {
    this.additionalroles = additionalroles;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserInfo userInfo = (UserInfo) o;
    return Objects.equals(this.tenantId, userInfo.tenantId) &&
        Objects.equals(this.uuid, userInfo.uuid) &&
        Objects.equals(this.userName, userInfo.userName) &&
        Objects.equals(this.password, userInfo.password) &&
        Objects.equals(this.idToken, userInfo.idToken) &&
        Objects.equals(this.mobileNumber, userInfo.mobileNumber) &&
        Objects.equals(this.email, userInfo.email) &&
        Objects.equals(this.primaryrole, userInfo.primaryrole) &&
        Objects.equals(this.additionalroles, userInfo.additionalroles);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(tenantId, uuid, userName, password, idToken, mobileNumber, email, primaryrole, additionalroles);
  }
  
  public UserInfo(org.egov.common.contract.request.User user){
      this.setTenantId(user.getTenantId());
      this.setUserName(user.getUserName());
      this.setId(user.getId());
      this.setName(user.getName());
      this.setType(user.getType());
      this.setMobileNumber(user.getMobileNumber());
      this.setEmailId(user.getEmailId());
      this.setRoles(addRoles(user.getRoles()));
      this.setUuid(user.getUuid());
}

  
  private List<Role> addRoles(List<org.egov.common.contract.request.Role> Roles){
      LinkedList<Role> addroles = new LinkedList<>();
      Roles.forEach(role -> {
              Role addrole = new Role();
              addrole.setId(role.getId());
              addrole.setName(role.getName());
              addrole.setCode(role.getCode());
              addroles.add(addrole);
      });
      return addroles;
}
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserInfo {\n");
    
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    idToken: ").append(toIndentedString(idToken)).append("\n");
    sb.append("    mobileNumber: ").append(toIndentedString(mobileNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    primaryrole: ").append(toIndentedString(primaryrole)).append("\n");
    sb.append("    additionalroles: ").append(toIndentedString(additionalroles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
